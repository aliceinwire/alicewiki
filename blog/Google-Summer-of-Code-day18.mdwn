___Google Summer of Code day 18___

`What was my plan for today?`  

* going on with the code for retriving the livepatch and installing it

`What i did today?`  


checked about kpatch-build required folder.

kpatch-build find_dirs function:

[[!pygments shell content="""
find_dirs() {
  if [[ -e "$SCRIPTDIR/create-diff-object" ]]; then
	  # git repo
	  TOOLSDIR="$SCRIPTDIR"
	  DATADIR="$(readlink -f $SCRIPTDIR/../kmod)"
  elif [[ -e "$SCRIPTDIR/../libexec/kpatch/create-diff-object" ]]; then
	  # installation path
	  TOOLSDIR="$(readlink -f $SCRIPTDIR/../libexec/kpatch)"
	  DATADIR="$(readlink -f $SCRIPTDIR/../share/kpatch)"
  else
	  return 1
  fi
}
"""]]

$SCRIPTDIR is the kpatch-build directory.
kpatch-build is installed in /usr/bin/ so /usr/kmod /usr/libexe are all under such directory.

error "CONFIG_FUNCTION_TRACER, CONFIG_HAVE_FENTRY, CONFIG_MODULES, CONFIG_SYSFS, CONFIG_KALLSYMS_ALL kernel config options are required"
Require by kmod/core.c:
https://github.com/dynup/kpatch/blob/master/kmod/core/core.c#L62

We probably need someway for check that this setting are configured in the kernel we are going to build.

Updating kpatch-build for work automatically with gentoo (as now fedora for example can automatically download the kernel rpm and install it, we could do similar thing with gentoo):
https://github.com/aliceinwire/kpatch/commits/gentoo

Starting to write the live patch downloader:
https://github.com/aliceinwire/elivepatch/commit/d26611fb898223f2ea2dcf323078347ca928cbda


Now the elivepatch server can call and build the livepatch with kpatch:
sudo kpatch-build -s /usr/src/linux-4.10.14-gentoo/ -v /usr/src/linux-4.10.14-gentoo//vmlinux -c config 1.patch --skip-gcc-check
ERROR: kpatch build failed. Check /root/.kpatch/build.log for more details.
127.0.0.1 - - [25/Jun/2017 05:27:06] "POST /elivepatch/api/v1.0/build_livepatch HTTP/1.1" 201 -
WARNING: Skipping gcc version matching check (not recommended)
Using source directory at /usr/src/linux-4.10.14-gentoo
Testing patch file
checking file fs/exec.c
Hunk #1 succeeded at 259 (offset 16 lines).
Reading special section data
Building original kernel


Fixed some minor pep8


`what i will do next time?`  
* work on the livepatch downloader and make the kpatch creator flexible



[[!tag draft ]]
